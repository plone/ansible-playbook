# munin-node config

log_level 4
{% if ansible_os_family == 'Debian' %}
log_file /var/log/munin/munin-node.log
pid_file /var/run/munin/munin-node.pid
{% else %}
log_file /var/log/munin-node/munin-node.log
pid_file /var/run/munin/munin-node.pid
{% endif %}

background 1
setsid 1

user root
group root

# Regexps for files to ignore

ignore_file ~$
#ignore_file [#~]$  # FIX doesn't work. '#' starts a comment
ignore_file DEADJOE$
ignore_file \.bak$
ignore_file %$
ignore_file \.dpkg-(tmp|new|old|dist)$
ignore_file \.rpm(save|new)$
ignore_file \.pod$

# Set this if the client doesn't report the correct hostname when
# telnetting to localhost, port 4949
#
#host_name localhost.localdomain

# A list of addresses that are allowed to connect.  This must be a
# regular expression, since Net::Server does not understand CIDR-style
# network notation unless the perl module Net::CIDR is installed.  You
# may repeat the allow line as many times as you'd like

allow ^127\.0\.0\.1$
{% if muninnode_query_ips is defined %}
{% for address in muninnode_query_ips %}
allow {{ "^" + address.replace(".", "\\.") + "$" }}
{% endfor %}
{% endif %}

# If you have installed the Net::CIDR perl module, you can use one or more
# cidr_allow and cidr_deny address/mask patterns.  A connecting client must
# match any cidr_allow, and not match any cidr_deny.  Note that a netmask
# *must* be provided, even if it's /32
#
# Example:
#
# cidr_allow 127.0.0.1/32
# cidr_allow 192.0.2.0/24
# cidr_deny  192.0.2.42/32

# Which address to bind to;
host *

# And which port
port {{ munin_node_port }}